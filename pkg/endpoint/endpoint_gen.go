// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/go-kit/kit/bankaccount/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateAccEndpoint      endpoint.Endpoint
	GetAccEndpoint         endpoint.Endpoint
	DepositAmountEndpoint  endpoint.Endpoint
	WithDrawAmountEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.BankaccountService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateAccEndpoint:      MakeCreateAccEndpoint(s),
		DepositAmountEndpoint:  MakeDepositAmountEndpoint(s),
		GetAccEndpoint:         MakeGetAccEndpoint(s),
		WithDrawAmountEndpoint: MakeWithDrawAmountEndpoint(s),
	}
	for _, m := range mdw["CreateAcc"] {
		eps.CreateAccEndpoint = m(eps.CreateAccEndpoint)
	}
	for _, m := range mdw["GetAcc"] {
		eps.GetAccEndpoint = m(eps.GetAccEndpoint)
	}
	for _, m := range mdw["DepositAmount"] {
		eps.DepositAmountEndpoint = m(eps.DepositAmountEndpoint)
	}
	for _, m := range mdw["WithDrawAmount"] {
		eps.WithDrawAmountEndpoint = m(eps.WithDrawAmountEndpoint)
	}
	return eps
}
